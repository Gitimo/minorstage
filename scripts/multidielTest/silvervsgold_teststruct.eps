%!PS-Adobe-2.0 EPSF-2.0
%%Title: silvervsgold_teststruct.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Fri Jun 21 01:14:21 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 625 481
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (silvervsgold_teststruct.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (timo)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jun 21 01:14:21 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 625 50 lineto 625 481 lineto 50 481 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/GreenA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/BlueA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1475 928 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 928 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.3)]
] -40.0 MRshow
0.500 UL
LTb
1475 2335 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 2335 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.4)]
] -40.0 MRshow
0.500 UL
LTb
1475 3742 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 3742 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.5)]
] -40.0 MRshow
0.500 UL
LTb
1475 5148 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 5148 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.6)]
] -40.0 MRshow
0.500 UL
LTb
1475 6555 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 6555 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.7)]
] -40.0 MRshow
0.500 UL
LTb
1475 7962 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 7962 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.8)]
] -40.0 MRshow
0.500 UL
LTb
1475 928 M
0 88 V
0 6946 R
0 -88 V
stroke
1475 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (350)]
] -40.0 MCshow
0.500 UL
LTb
2424 928 M
0 88 V
0 6946 R
0 -88 V
stroke
2424 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (400)]
] -40.0 MCshow
0.500 UL
LTb
3373 928 M
0 88 V
0 6946 R
0 -88 V
stroke
3373 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (450)]
] -40.0 MCshow
0.500 UL
LTb
4322 928 M
0 88 V
0 6946 R
0 -88 V
stroke
4322 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (500)]
] -40.0 MCshow
0.500 UL
LTb
5271 928 M
0 88 V
0 6946 R
0 -88 V
stroke
5271 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (550)]
] -40.0 MCshow
0.500 UL
LTb
6220 928 M
0 88 V
0 6946 R
0 -88 V
stroke
6220 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (600)]
] -40.0 MCshow
0.500 UL
LTb
7169 928 M
0 88 V
0 6946 R
0 -88 V
stroke
7169 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (650)]
] -40.0 MCshow
0.500 UL
LTb
8118 928 M
0 88 V
0 6946 R
0 -88 V
stroke
8118 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (700)]
] -40.0 MCshow
0.500 UL
LTb
9067 928 M
0 88 V
0 6946 R
0 -88 V
stroke
9067 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (750)]
] -40.0 MCshow
0.500 UL
LTb
10016 928 M
0 88 V
0 6946 R
0 -88 V
stroke
10016 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (800)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
1475 7962 N
0 -7034 V
8921 0 V
0 7034 V
-8921 0 V
Z stroke
LCb setrgbcolor
985 4445 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Reflectance)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
5935 578 M
[ [(Helvetica) 120.0 0.0 true true 0 (wavelength \(nm\))]
] -40.0 MCshow
LTb
1.000 UP
0.500 UL
LTb
% Begin plot #1
0.500 UL
LT0
LCb setrgbcolor
9745 7829 M
[ [(Helvetica) 120.0 0.0 true true 0 (Silver)]
] -40.0 MRshow
LT0
9829 7829 M
399 0 V
1475 6404 M
30 22 V
29 19 V
30 30 V
30 51 V
30 26 V
29 27 V
30 28 V
30 31 V
30 35 V
29 20 V
30 12 V
30 18 V
30 9 V
29 -11 V
30 -32 V
30 -36 V
30 -11 V
29 3 V
30 -17 V
30 -6 V
29 -3 V
30 -32 V
30 -23 V
30 -19 V
29 -7 V
30 -10 V
30 -13 V
30 -22 V
29 -32 V
30 -50 V
30 -42 V
30 -44 V
29 -65 V
30 -58 V
30 -50 V
30 -62 V
29 -68 V
30 -65 V
30 -67 V
29 -67 V
30 -71 V
30 -75 V
30 -75 V
29 -78 V
30 -103 V
30 -100 V
30 -88 V
29 -101 V
30 -120 V
30 -117 V
30 -118 V
29 -135 V
30 -146 V
30 -129 V
30 -124 V
29 -142 V
30 -149 V
30 -150 V
29 -151 V
30 -156 V
30 -157 V
30 -167 V
29 -168 V
30 -162 V
30 -161 V
30 -162 V
29 -161 V
30 -158 V
30 -153 V
30 -146 V
29 -140 V
30 -130 V
30 -122 V
30 -109 V
29 -95 V
30 -83 V
30 -67 V
29 -50 V
30 -31 V
30 -11 V
30 4 V
29 29 V
30 43 V
30 68 V
30 86 V
29 98 V
30 113 V
30 118 V
30 123 V
29 126 V
30 118 V
30 105 V
30 106 V
29 61 V
30 56 V
30 46 V
29 21 V
30 23 V
30 19 V
30 16 V
29 17 V
30 24 V
stroke 4508 2482 M
30 25 V
30 30 V
29 36 V
30 37 V
30 40 V
30 42 V
29 43 V
30 48 V
30 50 V
30 50 V
29 56 V
30 46 V
30 39 V
29 41 V
30 40 V
30 39 V
30 38 V
29 37 V
30 23 V
30 -11 V
30 -10 V
29 -12 V
30 -21 V
30 -19 V
30 -22 V
29 -31 V
30 -31 V
30 -31 V
30 -37 V
29 -37 V
30 -35 V
30 -38 V
29 -37 V
30 -36 V
30 -24 V
30 -18 V
29 -18 V
30 -17 V
30 -17 V
30 -16 V
29 -17 V
30 -16 V
30 -16 V
30 -15 V
29 -14 V
30 -14 V
30 -13 V
30 -14 V
29 -13 V
30 -13 V
30 -13 V
29 -19 V
30 -22 V
30 -23 V
30 -22 V
29 -20 V
30 -21 V
30 -20 V
30 -19 V
29 -19 V
30 -19 V
30 -18 V
30 -18 V
29 -17 V
30 -17 V
30 -16 V
29 -16 V
30 -16 V
30 -15 V
30 -15 V
29 -12 V
30 -11 V
30 -11 V
30 -12 V
29 -10 V
30 -11 V
30 -10 V
30 -11 V
29 -10 V
30 -10 V
30 -9 V
30 -9 V
29 -9 V
30 -9 V
30 -9 V
29 -8 V
30 -9 V
30 -8 V
30 -8 V
29 -8 V
30 -8 V
30 -8 V
30 -7 V
29 -8 V
30 -7 V
30 -7 V
30 -8 V
29 -7 V
30 -7 V
30 -8 V
30 -7 V
29 -6 V
30 -7 V
30 -6 V
stroke 7601 1919 M
29 -7 V
30 -6 V
30 -6 V
30 -7 V
29 -6 V
30 -6 V
30 -6 V
30 -6 V
29 -6 V
30 -6 V
30 -6 V
30 -6 V
29 -6 V
30 -5 V
30 -6 V
30 -6 V
29 -5 V
30 -5 V
30 -5 V
29 -6 V
30 -5 V
30 -5 V
30 -4 V
29 -5 V
30 -5 V
30 -5 V
30 -4 V
29 -5 V
30 -5 V
30 -4 V
30 -5 V
29 -4 V
30 -4 V
30 -5 V
30 -4 V
29 -4 V
30 -4 V
30 -4 V
29 -4 V
30 -4 V
30 -3 V
30 -4 V
29 -4 V
30 -3 V
30 -4 V
30 -3 V
29 -4 V
30 -3 V
30 -4 V
30 -3 V
29 -3 V
30 -3 V
30 -3 V
30 -3 V
29 -2 V
30 -3 V
30 -3 V
29 -2 V
30 -3 V
30 -2 V
30 -3 V
29 -2 V
30 -2 V
30 -3 V
30 -2 V
29 -2 V
30 -2 V
30 -1 V
30 -2 V
29 -2 V
30 -2 V
30 -1 V
30 -1 V
29 -2 V
30 -1 V
30 -1 V
29 -1 V
30 -1 V
30 -1 V
30 -1 V
29 -1 V
30 0 V
30 -1 V
30 0 V
29 -1 V
30 0 V
30 0 V
30 0 V
29 0 V
30 0 V
30 0 V
30 0 V
29 1 V
30 0 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LT1
LCb setrgbcolor
9745 7689 M
[ [(Helvetica) 120.0 0.0 true true 0 (Gold)]
] -40.0 MRshow
LT1
1475 3652 Crs
1505 3701 Crs
1534 3744 Crs
1564 3785 Crs
1594 3829 Crs
1624 3860 Crs
1653 3887 Crs
1683 3912 Crs
1713 3935 Crs
1743 3957 Crs
1772 3970 Crs
1802 3977 Crs
1832 3985 Crs
1862 3987 Crs
1891 3978 Crs
1921 3957 Crs
1951 3932 Crs
1981 3916 Crs
2010 3903 Crs
2040 3880 Crs
2070 3860 Crs
2099 3839 Crs
2129 3803 Crs
2159 3769 Crs
2189 3736 Crs
2218 3711 Crs
2248 3684 Crs
2278 3655 Crs
2308 3621 Crs
2337 3581 Crs
2367 3533 Crs
2397 3487 Crs
2427 3440 Crs
2456 3378 Crs
2486 3318 Crs
2516 3261 Crs
2546 3198 Crs
2575 3132 Crs
2605 3066 Crs
2635 2999 Crs
2664 2931 Crs
2694 2860 Crs
2724 2786 Crs
2754 2711 Crs
2783 2636 Crs
2813 2553 Crs
2843 2470 Crs
2873 2392 Crs
2902 2310 Crs
2932 2225 Crs
2962 2145 Crs
2992 2070 Crs
3021 1992 Crs
3051 1913 Crs
3081 1840 Crs
3111 1768 Crs
3140 1694 Crs
3170 1623 Crs
3200 1554 Crs
3229 1487 Crs
3259 1419 Crs
3289 1353 Crs
3319 1290 Crs
3348 1232 Crs
3378 1178 Crs
3408 1127 Crs
3438 1081 Crs
3467 1041 Crs
3497 1008 Crs
3527 984 Crs
3557 966 Crs
3586 953 Crs
3616 947 Crs
3646 954 Crs
3676 966 Crs
3705 990 Crs
3735 1019 Crs
3765 1060 Crs
3794 1111 Crs
3824 1170 Crs
3854 1241 Crs
3884 1315 Crs
3913 1402 Crs
3943 1493 Crs
3973 1599 Crs
4003 1714 Crs
4032 1832 Crs
4062 1959 Crs
4092 2087 Crs
4122 2214 Crs
4151 2340 Crs
4181 2457 Crs
4211 2560 Crs
4241 2663 Crs
4270 2730 Crs
4300 2794 Crs
4330 2849 Crs
4359 2882 Crs
4389 2917 Crs
4419 2948 Crs
4449 2977 Crs
4478 3006 Crs
4508 3041 Crs
4538 3076 Crs
4568 3116 Crs
4597 3161 Crs
4627 3207 Crs
4657 3253 Crs
4687 3298 Crs
4716 3344 Crs
4746 3395 Crs
4776 3445 Crs
4806 3497 Crs
4835 3553 Crs
4865 3594 Crs
4895 3627 Crs
4924 3662 Crs
4954 3696 Crs
4984 3729 Crs
5014 3762 Crs
5043 3794 Crs
5073 3809 Crs
5103 3786 Crs
5133 3763 Crs
5162 3738 Crs
5192 3706 Crs
5222 3675 Crs
5252 3643 Crs
5281 3603 Crs
5311 3561 Crs
5341 3519 Crs
5371 3471 Crs
5400 3424 Crs
5430 3377 Crs
5460 3328 Crs
5489 3279 Crs
5519 3230 Crs
5549 3204 Crs
5579 3189 Crs
5608 3174 Crs
5638 3159 Crs
5668 3145 Crs
5698 3131 Crs
5727 3117 Crs
5757 3103 Crs
5787 3091 Crs
5817 3079 Crs
5846 3068 Crs
5876 3058 Crs
5906 3048 Crs
5936 3038 Crs
5965 3028 Crs
5995 3018 Crs
6025 3009 Crs
6054 2988 Crs
6084 2958 Crs
6114 2929 Crs
6144 2900 Crs
6173 2872 Crs
6203 2843 Crs
6233 2815 Crs
6263 2788 Crs
6292 2760 Crs
6322 2733 Crs
6352 2706 Crs
6382 2679 Crs
6411 2653 Crs
6441 2627 Crs
6471 2601 Crs
6500 2576 Crs
6530 2551 Crs
6560 2526 Crs
6590 2502 Crs
6619 2484 Crs
6649 2470 Crs
6679 2455 Crs
6709 2441 Crs
6738 2427 Crs
6768 2413 Crs
6798 2399 Crs
6828 2385 Crs
6857 2372 Crs
6887 2358 Crs
6917 2347 Crs
6947 2338 Crs
6976 2328 Crs
7006 2318 Crs
7036 2309 Crs
7065 2299 Crs
7095 2290 Crs
7125 2281 Crs
7155 2272 Crs
7184 2263 Crs
7214 2254 Crs
7244 2248 Crs
7274 2242 Crs
7303 2235 Crs
7333 2229 Crs
7363 2223 Crs
7393 2216 Crs
7422 2210 Crs
7452 2204 Crs
7482 2197 Crs
7512 2192 Crs
7541 2186 Crs
7571 2181 Crs
7601 2177 Crs
7630 2173 Crs
7660 2169 Crs
7690 2165 Crs
7720 2161 Crs
7749 2157 Crs
7779 2154 Crs
7809 2150 Crs
7839 2146 Crs
7868 2143 Crs
7898 2139 Crs
7928 2136 Crs
7958 2134 Crs
7987 2131 Crs
8017 2129 Crs
8047 2126 Crs
8077 2124 Crs
8106 2122 Crs
8136 2120 Crs
8166 2118 Crs
8195 2116 Crs
8225 2115 Crs
8255 2113 Crs
8285 2111 Crs
8314 2111 Crs
8344 2110 Crs
8374 2109 Crs
8404 2108 Crs
8433 2108 Crs
8463 2107 Crs
8493 2106 Crs
8523 2106 Crs
8552 2105 Crs
8582 2105 Crs
8612 2104 Crs
8642 2104 Crs
8671 2104 Crs
8701 2104 Crs
8731 2105 Crs
8760 2105 Crs
8790 2106 Crs
8820 2107 Crs
8850 2107 Crs
8879 2108 Crs
8909 2109 Crs
8939 2110 Crs
8969 2111 Crs
8998 2111 Crs
9028 2112 Crs
9058 2114 Crs
9088 2115 Crs
9117 2116 Crs
9147 2118 Crs
9177 2120 Crs
9207 2122 Crs
9236 2124 Crs
9266 2126 Crs
9296 2128 Crs
9325 2130 Crs
9355 2133 Crs
9385 2135 Crs
9415 2137 Crs
9444 2140 Crs
9474 2142 Crs
9504 2144 Crs
9534 2147 Crs
9563 2150 Crs
9593 2153 Crs
9623 2157 Crs
9653 2160 Crs
9682 2164 Crs
9712 2167 Crs
9742 2171 Crs
9772 2175 Crs
9801 2179 Crs
9831 2183 Crs
9861 2187 Crs
9890 2190 Crs
9920 2194 Crs
9950 2199 Crs
9980 2203 Crs
10009 2207 Crs
10039 2212 Crs
10069 2216 Crs
10099 2221 Crs
10128 2226 Crs
10158 2231 Crs
10188 2236 Crs
10218 2241 Crs
10247 2247 Crs
10277 2252 Crs
10307 2257 Crs
10337 2262 Crs
10366 2268 Crs
10396 2273 Crs
10028 7689 Crs
% End plot #2
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
