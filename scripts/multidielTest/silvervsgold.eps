%!PS-Adobe-2.0 EPSF-2.0
%%Title: silvervsgold.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Fri Jun 21 00:45:39 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 625 481
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (silvervsgold.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (timo)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jun 21 00:45:39 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 625 50 lineto 625 481 lineto 50 481 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/GreenA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/BlueA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1475 928 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 928 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.3)]
] -40.0 MRshow
0.500 UL
LTb
1475 1933 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 1933 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.4)]
] -40.0 MRshow
0.500 UL
LTb
1475 2938 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 2938 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.5)]
] -40.0 MRshow
0.500 UL
LTb
1475 3943 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 3943 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.6)]
] -40.0 MRshow
0.500 UL
LTb
1475 4947 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 4947 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.7)]
] -40.0 MRshow
0.500 UL
LTb
1475 5952 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 5952 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.8)]
] -40.0 MRshow
0.500 UL
LTb
1475 6957 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 6957 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.9)]
] -40.0 MRshow
0.500 UL
LTb
1475 7962 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 7962 M
[ [(Helvetica) 120.0 0.0 true true 0 (1)]
] -40.0 MRshow
0.500 UL
LTb
2161 928 M
0 88 V
0 6946 R
0 -88 V
stroke
2161 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (400)]
] -40.0 MCshow
0.500 UL
LTb
3534 928 M
0 88 V
0 6946 R
0 -88 V
stroke
3534 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (500)]
] -40.0 MCshow
0.500 UL
LTb
4906 928 M
0 88 V
0 6946 R
0 -88 V
stroke
4906 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (600)]
] -40.0 MCshow
0.500 UL
LTb
6279 928 M
0 88 V
0 6946 R
0 -88 V
stroke
6279 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (700)]
] -40.0 MCshow
0.500 UL
LTb
7651 928 M
0 88 V
0 6946 R
0 -88 V
stroke
7651 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (800)]
] -40.0 MCshow
0.500 UL
LTb
9024 928 M
0 88 V
0 6946 R
0 -88 V
stroke
9024 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (900)]
] -40.0 MCshow
0.500 UL
LTb
10396 928 M
0 88 V
0 6946 R
0 -88 V
stroke
10396 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (1000)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
1475 7962 N
0 -7034 V
8921 0 V
0 7034 V
-8921 0 V
Z stroke
LCb setrgbcolor
985 4445 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Reflectance)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
5935 578 M
[ [(Helvetica) 120.0 0.0 true true 0 (wavelength \(nm\))]
] -40.0 MCshow
LTb
1.000 UP
0.500 UL
LTb
% Begin plot #1
0.500 UL
LT0
1475 5286 M
30 158 V
29 149 V
30 112 V
30 108 V
30 103 V
29 100 V
30 75 V
30 -7 V
30 -6 V
29 -6 V
30 -6 V
30 2 V
30 50 V
29 49 V
30 47 V
30 47 V
30 44 V
29 52 V
30 55 V
30 53 V
29 51 V
30 51 V
30 48 V
30 28 V
29 26 V
30 24 V
30 25 V
30 23 V
29 23 V
30 30 V
30 32 V
30 30 V
29 30 V
30 29 V
30 29 V
30 25 V
29 16 V
30 16 V
30 16 V
29 15 V
30 15 V
30 14 V
30 16 V
29 21 V
30 21 V
30 21 V
30 20 V
29 20 V
30 19 V
30 19 V
30 18 V
29 16 V
30 16 V
30 15 V
30 16 V
29 15 V
30 14 V
30 15 V
29 11 V
30 8 V
30 8 V
30 7 V
29 8 V
30 7 V
30 8 V
30 7 V
29 7 V
30 6 V
30 7 V
30 6 V
29 6 V
30 6 V
30 6 V
30 6 V
29 6 V
30 6 V
30 5 V
29 5 V
30 6 V
30 5 V
30 5 V
29 4 V
30 5 V
30 5 V
30 5 V
29 4 V
30 5 V
30 6 V
30 7 V
29 6 V
30 7 V
30 6 V
30 7 V
29 6 V
30 6 V
30 6 V
29 6 V
30 6 V
30 5 V
30 3 V
29 3 V
30 3 V
30 2 V
30 3 V
stroke 4568 7611 M
29 3 V
30 3 V
30 3 V
30 2 V
29 3 V
30 3 V
30 2 V
30 1 V
29 1 V
30 0 V
30 1 V
29 1 V
30 0 V
30 1 V
30 1 V
29 0 V
30 1 V
30 1 V
30 1 V
29 0 V
30 1 V
30 1 V
30 2 V
29 1 V
30 1 V
30 2 V
30 1 V
29 1 V
30 1 V
30 1 V
29 2 V
30 1 V
30 1 V
30 1 V
29 1 V
30 2 V
30 2 V
30 3 V
29 2 V
30 2 V
30 2 V
30 3 V
29 2 V
30 2 V
30 2 V
30 2 V
29 2 V
30 2 V
30 2 V
29 2 V
30 2 V
30 2 V
30 2 V
29 1 V
30 1 V
30 1 V
30 1 V
29 1 V
30 1 V
30 1 V
30 1 V
29 1 V
30 1 V
30 0 V
29 1 V
30 1 V
30 1 V
30 1 V
29 1 V
30 1 V
30 1 V
30 2 V
29 2 V
30 2 V
30 2 V
30 2 V
29 2 V
30 2 V
30 2 V
30 1 V
29 2 V
30 2 V
30 2 V
29 2 V
30 2 V
30 1 V
30 2 V
29 2 V
30 2 V
30 1 V
30 2 V
29 2 V
30 1 V
30 1 V
30 1 V
29 2 V
30 1 V
30 1 V
30 1 V
29 1 V
30 1 V
30 1 V
29 2 V
30 1 V
stroke 7660 7765 M
30 1 V
30 1 V
29 1 V
30 1 V
30 1 V
30 1 V
29 1 V
30 1 V
30 1 V
30 1 V
29 1 V
30 1 V
30 1 V
30 0 V
29 0 V
30 0 V
30 1 V
29 0 V
30 0 V
30 0 V
30 0 V
29 1 V
30 0 V
30 0 V
30 0 V
29 1 V
30 0 V
30 0 V
30 0 V
29 1 V
30 0 V
30 0 V
30 0 V
29 1 V
30 0 V
30 0 V
29 0 V
30 0 V
30 1 V
30 -1 V
29 0 V
30 0 V
30 0 V
30 -1 V
29 0 V
30 0 V
30 -1 V
30 0 V
29 0 V
30 0 V
30 -1 V
30 0 V
29 0 V
30 0 V
30 -1 V
29 0 V
30 0 V
30 0 V
30 -1 V
29 0 V
30 0 V
30 0 V
30 -1 V
29 0 V
30 0 V
30 0 V
30 0 V
29 -1 V
30 0 V
30 0 V
30 0 V
29 0 V
30 0 V
30 0 V
29 1 V
30 0 V
30 0 V
30 0 V
29 0 V
30 0 V
30 1 V
30 0 V
29 0 V
30 0 V
30 0 V
30 0 V
29 0 V
30 1 V
30 0 V
30 0 V
29 0 V
30 0 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LT1
1475 1552 Crs
1505 1556 Crs
1534 1560 Crs
1564 1568 Crs
1594 1577 Crs
1624 1586 Crs
1653 1594 Crs
1683 1606 Crs
1713 1627 Crs
1743 1648 Crs
1772 1669 Crs
1802 1690 Crs
1832 1711 Crs
1862 1725 Crs
1891 1740 Crs
1921 1754 Crs
1951 1769 Crs
1981 1784 Crs
2010 1795 Crs
2040 1804 Crs
2070 1814 Crs
2099 1823 Crs
2129 1833 Crs
2159 1842 Crs
2189 1846 Crs
2218 1849 Crs
2248 1853 Crs
2278 1856 Crs
2308 1859 Crs
2337 1863 Crs
2367 1860 Crs
2397 1856 Crs
2427 1853 Crs
2456 1849 Crs
2486 1845 Crs
2516 1841 Crs
2546 1837 Crs
2575 1832 Crs
2605 1826 Crs
2635 1821 Crs
2664 1815 Crs
2694 1810 Crs
2724 1805 Crs
2754 1800 Crs
2783 1798 Crs
2813 1796 Crs
2843 1795 Crs
2873 1794 Crs
2902 1793 Crs
2932 1793 Crs
2962 1794 Crs
2992 1800 Crs
3021 1811 Crs
3051 1824 Crs
3081 1837 Crs
3111 1851 Crs
3140 1867 Crs
3170 1884 Crs
3200 1902 Crs
3229 1944 Crs
3259 2021 Crs
3289 2102 Crs
3319 2188 Crs
3348 2280 Crs
3378 2378 Crs
3408 2481 Crs
3438 2589 Crs
3467 2704 Crs
3497 2859 Crs
3527 3035 Crs
3557 3214 Crs
3586 3396 Crs
3616 3581 Crs
3646 3768 Crs
3676 3956 Crs
3705 4147 Crs
3735 4338 Crs
3765 4528 Crs
3794 4691 Crs
3824 4851 Crs
3854 5008 Crs
3884 5161 Crs
3913 5311 Crs
3943 5458 Crs
3973 5600 Crs
4003 5739 Crs
4032 5875 Crs
4062 6007 Crs
4092 6092 Crs
4122 6160 Crs
4151 6227 Crs
4181 6291 Crs
4211 6354 Crs
4241 6416 Crs
4270 6476 Crs
4300 6534 Crs
4330 6591 Crs
4359 6647 Crs
4389 6701 Crs
4419 6739 Crs
4449 6756 Crs
4478 6773 Crs
4508 6791 Crs
4538 6807 Crs
4568 6824 Crs
4597 6841 Crs
4627 6858 Crs
4657 6874 Crs
4687 6891 Crs
4716 6907 Crs
4746 6924 Crs
4776 6940 Crs
4806 6956 Crs
4835 6972 Crs
4865 6988 Crs
4895 7004 Crs
4924 7020 Crs
4954 7035 Crs
4984 7051 Crs
5014 7067 Crs
5043 7082 Crs
5073 7098 Crs
5103 7113 Crs
5133 7128 Crs
5162 7143 Crs
5192 7158 Crs
5222 7173 Crs
5252 7188 Crs
5281 7203 Crs
5311 7218 Crs
5341 7233 Crs
5371 7247 Crs
5400 7262 Crs
5430 7276 Crs
5460 7291 Crs
5489 7305 Crs
5519 7319 Crs
5549 7333 Crs
5579 7347 Crs
5608 7361 Crs
5638 7375 Crs
5668 7389 Crs
5698 7402 Crs
5727 7415 Crs
5757 7428 Crs
5787 7440 Crs
5817 7452 Crs
5846 7463 Crs
5876 7474 Crs
5906 7485 Crs
5936 7495 Crs
5965 7505 Crs
5995 7515 Crs
6025 7524 Crs
6054 7534 Crs
6084 7543 Crs
6114 7551 Crs
6144 7558 Crs
6173 7563 Crs
6203 7568 Crs
6233 7573 Crs
6263 7578 Crs
6292 7583 Crs
6322 7587 Crs
6352 7592 Crs
6382 7596 Crs
6411 7601 Crs
6441 7605 Crs
6471 7609 Crs
6500 7613 Crs
6530 7617 Crs
6560 7621 Crs
6590 7625 Crs
6619 7629 Crs
6649 7633 Crs
6679 7637 Crs
6709 7639 Crs
6738 7642 Crs
6768 7644 Crs
6798 7646 Crs
6828 7649 Crs
6857 7651 Crs
6887 7653 Crs
6917 7655 Crs
6947 7658 Crs
6976 7660 Crs
7006 7662 Crs
7036 7664 Crs
7065 7666 Crs
7095 7668 Crs
7125 7670 Crs
7155 7672 Crs
7184 7674 Crs
7214 7676 Crs
7244 7678 Crs
7274 7680 Crs
7303 7682 Crs
7333 7684 Crs
7363 7685 Crs
7393 7686 Crs
7422 7688 Crs
7452 7689 Crs
7482 7691 Crs
7512 7692 Crs
7541 7694 Crs
7571 7695 Crs
7601 7696 Crs
7630 7698 Crs
7660 7699 Crs
7690 7700 Crs
7720 7702 Crs
7749 7703 Crs
7779 7704 Crs
7809 7705 Crs
7839 7707 Crs
7868 7708 Crs
7898 7709 Crs
7928 7710 Crs
7958 7712 Crs
7987 7713 Crs
8017 7714 Crs
8047 7714 Crs
8077 7715 Crs
8106 7716 Crs
8136 7716 Crs
8166 7717 Crs
8195 7717 Crs
8225 7718 Crs
8255 7718 Crs
8285 7719 Crs
8314 7719 Crs
8344 7720 Crs
8374 7720 Crs
8404 7721 Crs
8433 7721 Crs
8463 7722 Crs
8493 7722 Crs
8523 7723 Crs
8552 7723 Crs
8582 7724 Crs
8612 7724 Crs
8642 7725 Crs
8671 7725 Crs
8701 7726 Crs
8731 7726 Crs
8760 7727 Crs
8790 7727 Crs
8820 7728 Crs
8850 7728 Crs
8879 7729 Crs
8909 7729 Crs
8939 7730 Crs
8969 7730 Crs
8998 7731 Crs
9028 7731 Crs
9058 7732 Crs
9088 7732 Crs
9117 7733 Crs
9147 7733 Crs
9177 7734 Crs
9207 7734 Crs
9236 7735 Crs
9266 7735 Crs
9296 7736 Crs
9325 7736 Crs
9355 7737 Crs
9385 7737 Crs
9415 7738 Crs
9444 7738 Crs
9474 7739 Crs
9504 7739 Crs
9534 7740 Crs
9563 7740 Crs
9593 7741 Crs
9623 7741 Crs
9653 7742 Crs
9682 7742 Crs
9712 7743 Crs
9742 7743 Crs
9772 7743 Crs
9801 7744 Crs
9831 7744 Crs
9861 7744 Crs
9890 7744 Crs
9920 7744 Crs
9950 7744 Crs
9980 7745 Crs
10009 7745 Crs
10039 7745 Crs
10069 7745 Crs
10099 7745 Crs
10128 7746 Crs
10158 7746 Crs
10188 7746 Crs
10218 7746 Crs
10247 7746 Crs
10277 7746 Crs
10307 7747 Crs
10337 7747 Crs
10366 7747 Crs
10396 7747 Crs
% End plot #2
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
