%!PS-Adobe-2.0 EPSF-2.0
%%Title: silvervsgold_teststruct_only-n.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Fri Jun 21 01:29:46 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 625 481
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (silvervsgold_teststruct_only-n.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (timo)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jun 21 01:29:46 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 625 50 lineto 625 481 lineto 50 481 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/GreenA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/BlueA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1475 928 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 928 M
[ [(Helvetica) 120.0 0.0 true true 0 (0)]
] -40.0 MRshow
0.500 UL
LTb
1475 1933 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 1933 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.2)]
] -40.0 MRshow
0.500 UL
LTb
1475 2938 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 2938 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.4)]
] -40.0 MRshow
0.500 UL
LTb
1475 3943 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 3943 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.6)]
] -40.0 MRshow
0.500 UL
LTb
1475 4947 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 4947 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.8)]
] -40.0 MRshow
0.500 UL
LTb
1475 5952 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 5952 M
[ [(Helvetica) 120.0 0.0 true true 0 (1)]
] -40.0 MRshow
0.500 UL
LTb
1475 6957 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 6957 M
[ [(Helvetica) 120.0 0.0 true true 0 (1.2)]
] -40.0 MRshow
0.500 UL
LTb
1475 7962 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 7962 M
[ [(Helvetica) 120.0 0.0 true true 0 (1.4)]
] -40.0 MRshow
0.500 UL
LTb
1475 928 M
0 88 V
0 6946 R
0 -88 V
stroke
1475 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (350)]
] -40.0 MCshow
0.500 UL
LTb
2424 928 M
0 88 V
0 6946 R
0 -88 V
stroke
2424 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (400)]
] -40.0 MCshow
0.500 UL
LTb
3373 928 M
0 88 V
0 6946 R
0 -88 V
stroke
3373 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (450)]
] -40.0 MCshow
0.500 UL
LTb
4322 928 M
0 88 V
0 6946 R
0 -88 V
stroke
4322 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (500)]
] -40.0 MCshow
0.500 UL
LTb
5271 928 M
0 88 V
0 6946 R
0 -88 V
stroke
5271 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (550)]
] -40.0 MCshow
0.500 UL
LTb
6220 928 M
0 88 V
0 6946 R
0 -88 V
stroke
6220 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (600)]
] -40.0 MCshow
0.500 UL
LTb
7169 928 M
0 88 V
0 6946 R
0 -88 V
stroke
7169 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (650)]
] -40.0 MCshow
0.500 UL
LTb
8118 928 M
0 88 V
0 6946 R
0 -88 V
stroke
8118 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (700)]
] -40.0 MCshow
0.500 UL
LTb
9067 928 M
0 88 V
0 6946 R
0 -88 V
stroke
9067 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (750)]
] -40.0 MCshow
0.500 UL
LTb
10016 928 M
0 88 V
0 6946 R
0 -88 V
stroke
10016 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (800)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
1475 7962 N
0 -7034 V
8921 0 V
0 7034 V
-8921 0 V
Z stroke
LCb setrgbcolor
985 4445 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Reflectance)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
5935 578 M
[ [(Helvetica) 120.0 0.0 true true 0 (wavelength \(nm\))]
] -40.0 MCshow
LTb
1.000 UP
0.500 UL
LTb
% Begin plot #1
0.500 UL
LT0
LCb setrgbcolor
9745 7829 M
[ [(Helvetica) 120.0 0.0 true true 0 (Silver)]
] -40.0 MRshow
LT0
9829 7829 M
399 0 V
1475 3415 M
30 -693 V
29 588 V
30 837 V
30 529 V
30 300 V
29 206 V
30 147 V
30 110 V
30 77 V
29 56 V
30 41 V
30 32 V
30 22 V
29 14 V
30 5 V
30 -6 V
30 -19 V
29 -35 V
30 -65 V
30 -103 V
29 -158 V
30 -236 V
30 -381 V
30 -561 V
29 -566 V
30 -549 V
30 -359 V
30 -59 V
29 191 V
30 333 V
30 309 V
30 277 V
29 261 V
30 213 V
30 173 V
30 126 V
29 104 V
30 92 V
30 82 V
29 72 V
30 59 V
30 48 V
30 30 V
29 24 V
30 20 V
30 19 V
30 15 V
29 8 V
30 -2 V
30 -3 V
30 -3 V
29 -16 V
30 -23 V
30 -22 V
30 -20 V
29 -42 V
30 -52 V
30 -65 V
29 -74 V
30 -85 V
30 -94 V
30 -127 V
29 -151 V
30 -185 V
30 -218 V
30 -284 V
29 -357 V
30 -387 V
30 -393 V
30 -429 V
29 -380 V
30 21 V
30 399 V
30 676 V
29 1048 V
30 882 V
30 520 V
29 317 V
30 184 V
30 98 V
30 72 V
29 8 V
30 7 V
30 -91 V
30 -279 V
29 -926 V
30 -3150 V
30 157 V
30 2243 V
29 1088 V
30 753 V
30 15 V
30 -3846 V
29 2875 V
30 1085 V
30 -801 V
29 -2998 V
30 2469 V
30 864 V
30 525 V
29 100 V
30 -2063 V
stroke 4508 3885 M
4538 993 L
30 1769 V
29 1161 V
30 699 V
30 460 V
30 350 V
29 290 V
30 225 V
30 33 V
30 -797 V
29 -3403 V
30 -296 V
30 1665 V
29 1102 V
30 653 V
30 487 V
30 421 V
29 176 V
30 -1801 V
30 -2898 V
30 2202 V
29 1149 V
30 703 V
30 506 V
30 -45 V
29 -3500 V
30 -480 V
30 1805 V
30 899 V
29 607 V
30 470 V
30 296 V
29 -87 V
30 -1706 V
30 -2896 V
30 349 V
29 1269 V
30 892 V
30 590 V
30 455 V
29 373 V
30 292 V
30 250 V
30 185 V
29 35 V
30 -313 V
30 -1110 V
30 -2063 V
29 -1352 V
30 201 V
30 812 V
29 750 V
30 584 V
30 465 V
30 380 V
29 308 V
30 267 V
30 240 V
30 214 V
29 187 V
30 166 V
30 136 V
30 79 V
29 -18 V
30 -199 V
30 -517 V
29 -961 V
30 -1330 V
30 -1224 V
30 -576 V
29 75 V
30 400 V
30 494 V
30 482 V
29 423 V
30 368 V
30 324 V
30 287 V
29 253 V
30 227 V
30 210 V
30 195 V
29 178 V
30 163 V
30 153 V
29 142 V
30 130 V
30 113 V
30 90 V
29 56 V
30 4 V
30 -70 V
30 -180 V
29 -336 V
30 -536 V
30 -731 V
30 -855 V
29 -863 V
30 -698 V
30 -414 V
30 -118 V
29 102 V
30 238 V
30 305 V
29 323 V
stroke 7630 1962 M
30 312 V
30 297 V
30 277 V
29 257 V
30 235 V
30 217 V
30 201 V
29 187 V
30 176 V
30 161 V
30 151 V
29 144 V
30 137 V
30 131 V
30 122 V
29 116 V
30 112 V
30 107 V
29 101 V
30 95 V
30 87 V
30 78 V
29 67 V
30 52 V
30 33 V
30 8 V
29 -23 V
30 -63 V
30 -115 V
30 -178 V
29 -253 V
30 -342 V
30 -435 V
30 -522 V
29 -585 V
30 -595 V
30 -563 V
29 -481 V
30 -362 V
30 -226 V
30 -98 V
29 10 V
30 90 V
30 145 V
30 182 V
29 202 V
30 207 V
30 206 V
30 203 V
29 197 V
30 189 V
30 181 V
30 170 V
29 160 V
30 153 V
30 145 V
29 139 V
30 132 V
30 123 V
30 118 V
29 114 V
30 109 V
30 105 V
30 101 V
29 98 V
30 96 V
30 92 V
30 90 V
29 87 V
30 85 V
30 82 V
30 78 V
29 76 V
30 75 V
30 72 V
29 71 V
30 69 V
30 66 V
30 63 V
29 61 V
30 58 V
30 55 V
30 50 V
29 44 V
30 39 V
30 32 V
30 25 V
29 15 V
30 5 V
30 -8 V
30 -23 V
29 -39 V
30 -60 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LT1
LCb setrgbcolor
9745 7689 M
[ [(Helvetica) 120.0 0.0 true true 0 (Gold)]
] -40.0 MRshow
LT1
1475 1315 Crs
1505 1544 Crs
1534 2031 Crs
1564 2563 Crs
1594 3003 Crs
1624 3325 Crs
1653 3582 Crs
1683 3779 Crs
1713 3919 Crs
1743 3999 Crs
1772 4035 Crs
1802 4029 Crs
1832 3985 Crs
1862 3905 Crs
1891 3784 Crs
1921 3618 Crs
1951 3382 Crs
1981 3108 Crs
2010 2798 Crs
2040 2449 Crs
2070 2104 Crs
2099 1785 Crs
2129 1525 Crs
2159 1338 Crs
2189 1271 Crs
2218 1308 Crs
2248 1419 Crs
2278 1586 Crs
2308 1783 Crs
2337 2003 Crs
2367 2238 Crs
2397 2435 Crs
2427 2617 Crs
2456 2815 Crs
2486 2989 Crs
2516 3142 Crs
2546 3265 Crs
2575 3374 Crs
2605 3475 Crs
2635 3568 Crs
2664 3652 Crs
2694 3723 Crs
2724 3783 Crs
2754 3825 Crs
2783 3860 Crs
2813 3894 Crs
2843 3925 Crs
2873 3951 Crs
2902 3972 Crs
2932 3983 Crs
2962 3994 Crs
2992 4005 Crs
3021 4006 Crs
3051 4001 Crs
3081 3995 Crs
3111 3990 Crs
3140 3967 Crs
3170 3935 Crs
3200 3892 Crs
3229 3842 Crs
3259 3789 Crs
3289 3731 Crs
3319 3649 Crs
3348 3553 Crs
3378 3435 Crs
3408 3300 Crs
3438 3131 Crs
3467 2927 Crs
3497 2717 Crs
3527 2507 Crs
3557 2257 Crs
3586 1932 Crs
3616 1634 Crs
3646 1428 Crs
3676 1285 Crs
3705 1233 Crs
3735 1387 Crs
3765 1683 Crs
3794 2054 Crs
3824 2421 Crs
3854 2704 Crs
3884 2983 Crs
3913 3022 Crs
3943 3061 Crs
3973 2750 Crs
4003 2217 Crs
4032 1536 Crs
4062 1478 Crs
4092 2431 Crs
4122 3875 Crs
4151 4690 Crs
4181 5061 Crs
4211 2736 Crs
4241 2694 Crs
4270 4636 Crs
4300 5153 Crs
4330 1927 Crs
4359 2867 Crs
4389 4532 Crs
4419 5166 Crs
4449 5286 Crs
4478 3818 Crs
4508 1290 Crs
4538 2128 Crs
4568 3484 Crs
4597 4273 Crs
4627 4802 Crs
4657 5169 Crs
4687 5438 Crs
4716 5604 Crs
4746 5532 Crs
4776 4699 Crs
4806 2226 Crs
4835 1232 Crs
4865 2749 Crs
4895 3897 Crs
4924 4665 Crs
4954 5180 Crs
4984 5590 Crs
5014 5891 Crs
5043 5379 Crs
5073 1355 Crs
5103 2583 Crs
5133 4190 Crs
5162 5038 Crs
5192 5634 Crs
5222 5995 Crs
5252 4552 Crs
5281 1033 Crs
5311 3039 Crs
5341 4312 Crs
5371 4994 Crs
5400 5512 Crs
5430 5923 Crs
5460 6022 Crs
5489 4832 Crs
5519 1383 Crs
5549 1488 Crs
5579 2820 Crs
5608 3783 Crs
5638 4421 Crs
5668 4875 Crs
5698 5254 Crs
5727 5587 Crs
5757 5857 Crs
5787 6069 Crs
5817 6113 Crs
5846 5666 Crs
5876 4099 Crs
5906 1681 Crs
5936 977 Crs
5965 1713 Crs
5995 2602 Crs
6025 3321 Crs
6054 3855 Crs
6084 4267 Crs
6114 4610 Crs
6144 4907 Crs
6173 5165 Crs
6203 5404 Crs
6233 5630 Crs
6263 5841 Crs
6292 6025 Crs
6322 6174 Crs
6352 6237 Crs
6382 6113 Crs
6411 5613 Crs
6441 4472 Crs
6471 2744 Crs
6500 1332 Crs
6530 933 Crs
6560 1264 Crs
6590 1838 Crs
6619 2397 Crs
6649 2887 Crs
6679 3309 Crs
6709 3672 Crs
6738 3981 Crs
6768 4253 Crs
6798 4499 Crs
6828 4725 Crs
6857 4933 Crs
6887 5129 Crs
6917 5317 Crs
6947 5498 Crs
6976 5668 Crs
7006 5827 Crs
7036 5973 Crs
7065 6102 Crs
7095 6199 Crs
7125 6242 Crs
7155 6193 Crs
7184 5991 Crs
7214 5551 Crs
7244 4813 Crs
7274 3774 Crs
7303 2603 Crs
7333 1616 Crs
7363 1064 Crs
7393 935 Crs
7422 1089 Crs
7452 1392 Crs
7482 1752 Crs
7512 2113 Crs
7541 2456 Crs
7571 2775 Crs
7601 3067 Crs
7630 3330 Crs
7660 3566 Crs
7690 3784 Crs
7720 3984 Crs
7749 4172 Crs
7779 4346 Crs
7809 4510 Crs
7839 4666 Crs
7868 4814 Crs
7898 4957 Crs
7928 5091 Crs
7958 5219 Crs
7987 5344 Crs
8017 5463 Crs
8047 5578 Crs
8077 5684 Crs
8106 5783 Crs
8136 5873 Crs
8166 5951 Crs
8195 6013 Crs
8225 6053 Crs
8255 6062 Crs
8285 6030 Crs
8314 5942 Crs
8344 5780 Crs
8374 5528 Crs
8404 5174 Crs
8433 4701 Crs
8463 4113 Crs
8493 3441 Crs
8523 2743 Crs
8552 2097 Crs
8582 1567 Crs
8612 1197 Crs
8642 998 Crs
8671 950 Crs
8701 1015 Crs
8731 1159 Crs
8760 1351 Crs
8790 1569 Crs
8820 1799 Crs
8850 2027 Crs
8879 2248 Crs
8909 2460 Crs
8939 2663 Crs
8969 2855 Crs
8998 3036 Crs
9028 3205 Crs
9058 3363 Crs
9088 3513 Crs
9117 3656 Crs
9147 3792 Crs
9177 3921 Crs
9207 4042 Crs
9236 4158 Crs
9266 4269 Crs
9296 4377 Crs
9325 4480 Crs
9355 4580 Crs
9385 4674 Crs
9415 4765 Crs
9444 4854 Crs
9474 4940 Crs
9504 5024 Crs
9534 5105 Crs
9563 5185 Crs
9593 5262 Crs
9623 5336 Crs
9653 5409 Crs
9682 5478 Crs
9712 5544 Crs
9742 5606 Crs
9772 5662 Crs
9801 5714 Crs
9831 5761 Crs
9861 5802 Crs
9890 5835 Crs
9920 5859 Crs
9950 5873 Crs
9980 5874 Crs
10009 5860 Crs
10039 5828 Crs
10069 5775 Crs
10099 5698 Crs
10128 5593 Crs
10158 5460 Crs
10188 5292 Crs
10218 5086 Crs
10247 4841 Crs
10277 4556 Crs
10307 4232 Crs
10337 3881 Crs
10366 3507 Crs
10396 3120 Crs
10028 7689 Crs
% End plot #2
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
