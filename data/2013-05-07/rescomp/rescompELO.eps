%!PS-Adobe-2.0 EPSF-2.0
%%Title: rescompELO.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Tue May  7 15:47:39 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 625 481
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (rescompELO.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (timo)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue May  7 15:47:39 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 625 50 lineto 625 481 lineto 50 481 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/GreenA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/BlueA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1475 928 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 928 M
[ [(Helvetica) 120.0 0.0 true true 0 (0)]
] -40.0 MRshow
0.500 UL
LTb
1475 1933 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 1933 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.1)]
] -40.0 MRshow
0.500 UL
LTb
1475 2938 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 2938 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.2)]
] -40.0 MRshow
0.500 UL
LTb
1475 3943 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 3943 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.3)]
] -40.0 MRshow
0.500 UL
LTb
1475 4947 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 4947 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.4)]
] -40.0 MRshow
0.500 UL
LTb
1475 5952 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 5952 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.5)]
] -40.0 MRshow
0.500 UL
LTb
1475 6957 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 6957 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.6)]
] -40.0 MRshow
0.500 UL
LTb
1475 7962 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 7962 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.7)]
] -40.0 MRshow
0.500 UL
LTb
2218 928 M
0 88 V
0 6946 R
0 -88 V
stroke
2218 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (400)]
] -40.0 MCshow
0.500 UL
LTb
3705 928 M
0 88 V
0 6946 R
0 -88 V
stroke
3705 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (500)]
] -40.0 MCshow
0.500 UL
LTb
5192 928 M
0 88 V
0 6946 R
0 -88 V
stroke
5192 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (600)]
] -40.0 MCshow
0.500 UL
LTb
6679 928 M
0 88 V
0 6946 R
0 -88 V
stroke
6679 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (700)]
] -40.0 MCshow
0.500 UL
LTb
8166 928 M
0 88 V
0 6946 R
0 -88 V
stroke
8166 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (800)]
] -40.0 MCshow
0.500 UL
LTb
9653 928 M
0 88 V
0 6946 R
0 -88 V
stroke
9653 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (900)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
1475 7962 N
0 -7034 V
8921 0 V
0 7034 V
-8921 0 V
Z stroke
LCb setrgbcolor
985 4445 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (eqe)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
5935 578 M
[ [(Helvetica) 120.0 0.0 true true 0 (wavelength \(nm\))]
] -40.0 MCshow
LTb
5935 8172 M
[ [(Helvetica) 120.0 0.0 true true 0 (W1660, resolutions compared)]
] -40.0 MCshow
1.000 UP
0.500 UL
LTb
% Begin plot #1
1.000 UP
0.500 UL
LT0
LCb setrgbcolor
9745 7829 M
[ [(Helvetica) 120.0 0.0 true true 0 (3 nm)]
] -40.0 MRshow
LT0
1475 2181 Crs
1520 2197 Crs
1564 2173 Crs
1609 2206 Crs
1653 2259 Crs
1698 2274 Crs
1743 2293 Crs
1787 2344 Crs
1832 2408 Crs
1876 2484 Crs
1921 2538 Crs
1966 2606 Crs
2010 2669 Crs
2055 2725 Crs
2099 2827 Crs
2144 2888 Crs
2189 2986 Crs
2233 3073 Crs
2278 3156 Crs
2322 3215 Crs
2367 3300 Crs
2412 3386 Crs
2456 3450 Crs
2501 3525 Crs
2546 3624 Crs
2590 3728 Crs
2635 3868 Crs
2679 3993 Crs
2724 4150 Crs
2769 4275 Crs
2813 4415 Crs
2858 4529 Crs
2902 4647 Crs
2947 4746 Crs
2992 4856 Crs
3036 4946 Crs
3081 5043 Crs
3125 5130 Crs
3170 5231 Crs
3215 5322 Crs
3259 5427 Crs
3304 5518 Crs
3348 5609 Crs
3393 5705 Crs
3438 5790 Crs
3482 5864 Crs
3527 5953 Crs
3571 6030 Crs
3616 6102 Crs
3661 6166 Crs
3705 6229 Crs
3750 6301 Crs
3794 6343 Crs
3839 6399 Crs
3884 6436 Crs
3928 6474 Crs
3973 6525 Crs
4017 6550 Crs
4062 6579 Crs
4107 6614 Crs
4151 6637 Crs
4196 6659 Crs
4241 6699 Crs
4285 6721 Crs
4330 6742 Crs
4374 6760 Crs
4419 6782 Crs
4464 6803 Crs
4508 6827 Crs
4553 6840 Crs
4597 6870 Crs
4642 6888 Crs
4687 6905 Crs
4731 6925 Crs
4776 6945 Crs
4820 6960 Crs
4865 6986 Crs
4910 7004 Crs
4954 7021 Crs
4999 7038 Crs
5043 7053 Crs
5088 7066 Crs
5133 7092 Crs
5177 7100 Crs
5222 7114 Crs
5266 7129 Crs
5311 7142 Crs
5356 7159 Crs
5400 7177 Crs
5445 7190 Crs
5489 7206 Crs
5534 7224 Crs
5579 7234 Crs
5623 7246 Crs
5668 7261 Crs
5712 7274 Crs
5757 7285 Crs
5802 7297 Crs
5846 7314 Crs
5891 7321 Crs
5936 7330 Crs
5980 7337 Crs
6025 7345 Crs
6069 7350 Crs
6114 7362 Crs
6159 7371 Crs
6203 7378 Crs
6248 7385 Crs
6292 7389 Crs
6337 7393 Crs
6382 7403 Crs
6426 7412 Crs
6471 7429 Crs
6515 7438 Crs
6560 7441 Crs
6605 7442 Crs
6649 7432 Crs
6694 7420 Crs
6738 7421 Crs
6783 7429 Crs
6828 7452 Crs
6872 7474 Crs
6917 7486 Crs
6961 7480 Crs
7006 7440 Crs
7051 7400 Crs
7095 7378 Crs
7140 7380 Crs
7184 7422 Crs
7229 7481 Crs
7274 7537 Crs
7318 7557 Crs
7363 7538 Crs
7407 7482 Crs
7452 7412 Crs
7497 7344 Crs
7541 7316 Crs
7586 7335 Crs
7630 7403 Crs
7675 7495 Crs
7720 7582 Crs
7764 7635 Crs
7809 7629 Crs
7854 7556 Crs
7898 7443 Crs
7943 7324 Crs
7987 7218 Crs
8032 7165 Crs
8077 7174 Crs
8121 7252 Crs
8166 7329 Crs
8210 7396 Crs
8255 7434 Crs
8300 7430 Crs
8344 7382 Crs
8389 7294 Crs
8433 7171 Crs
8478 7050 Crs
8523 6942 Crs
8567 6886 Crs
8612 6890 Crs
8656 6966 Crs
8701 7101 Crs
8746 7270 Crs
8790 7431 Crs
8835 7546 Crs
8879 7584 Crs
8924 7509 Crs
8969 7290 Crs
9013 6906 Crs
9058 6368 Crs
9102 5710 Crs
9147 5009 Crs
9192 4337 Crs
9236 3748 Crs
9281 3236 Crs
9325 2805 Crs
9370 2466 Crs
9415 2174 Crs
9459 1934 Crs
9504 1736 Crs
9549 1546 Crs
9593 1353 Crs
9638 1168 Crs
9682 1042 Crs
9727 980 Crs
9772 958 Crs
9816 954 Crs
9861 956 Crs
9905 962 Crs
9950 968 Crs
9995 970 Crs
10039 970 Crs
10084 969 Crs
10128 964 Crs
10173 958 Crs
10218 950 Crs
10262 942 Crs
10307 936 Crs
10351 933 Crs
10396 932 Crs
10028 7829 Crs
% End plot #1
% Begin plot #2
1.000 UP
0.500 UL
LT1
LCb setrgbcolor
9745 7689 M
[ [(Helvetica) 120.0 0.0 true true 0 (6 nm)]
] -40.0 MRshow
LT1
1475 2181 Crs
1564 2173 Crs
1653 2259 Crs
1743 2293 Crs
1832 2408 Crs
1921 2538 Crs
2010 2669 Crs
2099 2827 Crs
2189 2986 Crs
2278 3156 Crs
2367 3300 Crs
2456 3450 Crs
2546 3624 Crs
2635 3868 Crs
2724 4150 Crs
2813 4415 Crs
2902 4647 Crs
2992 4856 Crs
3081 5043 Crs
3170 5231 Crs
3259 5427 Crs
3348 5609 Crs
3438 5790 Crs
3527 5953 Crs
3616 6102 Crs
3705 6229 Crs
3794 6343 Crs
3884 6436 Crs
3973 6525 Crs
4062 6579 Crs
4151 6637 Crs
4241 6699 Crs
4330 6742 Crs
4419 6782 Crs
4508 6827 Crs
4597 6870 Crs
4687 6905 Crs
4776 6945 Crs
4865 6986 Crs
4954 7021 Crs
5043 7053 Crs
5133 7092 Crs
5222 7114 Crs
5311 7142 Crs
5400 7177 Crs
5489 7206 Crs
5579 7234 Crs
5668 7261 Crs
5757 7285 Crs
5846 7314 Crs
5936 7330 Crs
6025 7345 Crs
6114 7362 Crs
6203 7378 Crs
6292 7389 Crs
6382 7403 Crs
6471 7429 Crs
6560 7441 Crs
6649 7432 Crs
6738 7421 Crs
6828 7452 Crs
6917 7486 Crs
7006 7440 Crs
7095 7378 Crs
7184 7422 Crs
7274 7537 Crs
7363 7538 Crs
7452 7412 Crs
7541 7316 Crs
7630 7403 Crs
7720 7582 Crs
7809 7629 Crs
7898 7443 Crs
7987 7218 Crs
8077 7174 Crs
8166 7329 Crs
8255 7434 Crs
8344 7382 Crs
8433 7171 Crs
8523 6942 Crs
8612 6890 Crs
8701 7101 Crs
8790 7431 Crs
8879 7584 Crs
8969 7290 Crs
9058 6368 Crs
9147 5009 Crs
9236 3748 Crs
9325 2805 Crs
9415 2174 Crs
9504 1736 Crs
9593 1353 Crs
9682 1042 Crs
9772 958 Crs
9861 956 Crs
9950 968 Crs
10039 970 Crs
10128 964 Crs
10218 950 Crs
10307 936 Crs
10396 932 Crs
10028 7689 Crs
% End plot #2
% Begin plot #3
1.000 UP
0.500 UL
LT2
LCb setrgbcolor
9745 7549 M
[ [(Helvetica) 120.0 0.0 true true 0 (9 nm)]
] -40.0 MRshow
LT2
1475 2181 Crs
1609 2206 Crs
1743 2293 Crs
1876 2484 Crs
2010 2669 Crs
2144 2888 Crs
2278 3156 Crs
2412 3386 Crs
2546 3624 Crs
2679 3993 Crs
2813 4415 Crs
2947 4746 Crs
3081 5043 Crs
3215 5322 Crs
3348 5609 Crs
3482 5864 Crs
3616 6102 Crs
3750 6301 Crs
3884 6436 Crs
4017 6550 Crs
4151 6637 Crs
4285 6721 Crs
4419 6782 Crs
4553 6840 Crs
4687 6905 Crs
4820 6960 Crs
4954 7021 Crs
5088 7066 Crs
5222 7114 Crs
5356 7159 Crs
5489 7206 Crs
5623 7246 Crs
5757 7285 Crs
5891 7321 Crs
6025 7345 Crs
6159 7371 Crs
6292 7389 Crs
6426 7412 Crs
6560 7441 Crs
6694 7420 Crs
6828 7452 Crs
6961 7480 Crs
7095 7378 Crs
7229 7481 Crs
7363 7538 Crs
7497 7344 Crs
7630 7403 Crs
7764 7635 Crs
7898 7443 Crs
8032 7165 Crs
8166 7329 Crs
8300 7430 Crs
8433 7171 Crs
8567 6886 Crs
8701 7101 Crs
8835 7546 Crs
8969 7290 Crs
9102 5710 Crs
9236 3748 Crs
9370 2466 Crs
9504 1736 Crs
9638 1168 Crs
9772 958 Crs
9905 962 Crs
10039 970 Crs
10173 958 Crs
10307 936 Crs
10028 7549 Crs
% End plot #3
% Begin plot #4
1.000 UP
0.500 UL
LT3
LCb setrgbcolor
9745 7409 M
[ [(Helvetica) 120.0 0.0 true true 0 (12 nm)]
] -40.0 MRshow
LT3
1475 2181 Star
1653 2259 Star
1832 2408 Star
2010 2669 Star
2189 2986 Star
2367 3300 Star
2546 3624 Star
2724 4150 Star
2902 4647 Star
3081 5043 Star
3259 5427 Star
3438 5790 Star
3616 6102 Star
3794 6343 Star
3973 6525 Star
4151 6637 Star
4330 6742 Star
4508 6827 Star
4687 6905 Star
4865 6986 Star
5043 7053 Star
5222 7114 Star
5400 7177 Star
5579 7234 Star
5757 7285 Star
5936 7330 Star
6114 7362 Star
6292 7389 Star
6471 7429 Star
6649 7432 Star
6828 7452 Star
7006 7440 Star
7184 7422 Star
7363 7538 Star
7541 7316 Star
7720 7582 Star
7898 7443 Star
8077 7174 Star
8255 7434 Star
8433 7171 Star
8612 6890 Star
8790 7431 Star
8969 7290 Star
9147 5009 Star
9325 2805 Star
9504 1736 Star
9682 1042 Star
9861 956 Star
10039 970 Star
10218 950 Star
10396 932 Star
10028 7409 Star
% End plot #4
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
