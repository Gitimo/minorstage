%!PS-Adobe-2.0 EPSF-2.0
%%Title: rescompSUB.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Tue May  7 15:39:45 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 625 481
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (rescompSUB.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (timo)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue May  7 15:39:45 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 625 50 lineto 625 481 lineto 50 481 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/GreenA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/BlueA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1475 928 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 928 M
[ [(Helvetica) 120.0 0.0 true true 0 (0)]
] -40.0 MRshow
0.500 UL
LTb
1475 2207 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 2207 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.1)]
] -40.0 MRshow
0.500 UL
LTb
1475 3486 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 3486 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.2)]
] -40.0 MRshow
0.500 UL
LTb
1475 4765 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 4765 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.3)]
] -40.0 MRshow
0.500 UL
LTb
1475 6044 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 6044 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.4)]
] -40.0 MRshow
0.500 UL
LTb
1475 7323 M
88 0 V
8833 0 R
-88 0 V
stroke
1391 7323 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.5)]
] -40.0 MRshow
0.500 UL
LTb
2286 928 M
0 88 V
0 6946 R
0 -88 V
stroke
2286 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (400)]
] -40.0 MCshow
0.500 UL
LTb
3908 928 M
0 88 V
0 6946 R
0 -88 V
stroke
3908 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (500)]
] -40.0 MCshow
0.500 UL
LTb
5530 928 M
0 88 V
0 6946 R
0 -88 V
stroke
5530 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (600)]
] -40.0 MCshow
0.500 UL
LTb
7152 928 M
0 88 V
0 6946 R
0 -88 V
stroke
7152 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (700)]
] -40.0 MCshow
0.500 UL
LTb
8774 928 M
0 88 V
0 6946 R
0 -88 V
stroke
8774 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (800)]
] -40.0 MCshow
0.500 UL
LTb
10396 928 M
0 88 V
0 6946 R
0 -88 V
stroke
10396 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (900)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
1475 7962 N
0 -7034 V
8921 0 V
0 7034 V
-8921 0 V
Z stroke
LCb setrgbcolor
985 4445 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (eqe)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
5935 578 M
[ [(Helvetica) 120.0 0.0 true true 0 (wavelength \(nm\))]
] -40.0 MCshow
LTb
5935 8172 M
[ [(Helvetica) 120.0 0.0 true true 0 (W1670, resolutions compared)]
] -40.0 MCshow
1.000 UP
0.500 UL
LTb
% Begin plot #1
1.000 UP
0.500 UL
LT0
LCb setrgbcolor
9745 7829 M
[ [(Helvetica) 120.0 0.0 true true 0 (3 nm)]
] -40.0 MRshow
LT0
1475 3097 Crs
1524 3026 Crs
1572 2998 Crs
1621 3114 Crs
1670 3079 Crs
1718 3066 Crs
1767 3094 Crs
1816 3140 Crs
1864 3259 Crs
1913 3308 Crs
1962 3396 Crs
2010 3497 Crs
2059 3647 Crs
2108 3776 Crs
2156 3942 Crs
2205 4096 Crs
2254 4209 Crs
2302 4408 Crs
2351 4515 Crs
2400 4689 Crs
2448 4835 Crs
2497 5026 Crs
2546 5187 Crs
2594 5336 Crs
2643 5503 Crs
2691 5619 Crs
2740 5773 Crs
2789 5853 Crs
2837 5953 Crs
2886 6036 Crs
2935 6125 Crs
2983 6182 Crs
3032 6262 Crs
3081 6301 Crs
3129 6343 Crs
3178 6408 Crs
3227 6415 Crs
3275 6468 Crs
3324 6495 Crs
3373 6544 Crs
3421 6582 Crs
3470 6617 Crs
3519 6635 Crs
3567 6683 Crs
3616 6721 Crs
3665 6749 Crs
3713 6776 Crs
3762 6806 Crs
3811 6853 Crs
3859 6877 Crs
3908 6913 Crs
3957 6968 Crs
4005 6976 Crs
4054 7018 Crs
4103 7026 Crs
4151 7066 Crs
4200 7089 Crs
4249 7110 Crs
4297 7163 Crs
4346 7178 Crs
4395 7220 Crs
4443 7234 Crs
4492 7250 Crs
4541 7286 Crs
4589 7311 Crs
4638 7317 Crs
4687 7306 Crs
4735 7303 Crs
4784 7315 Crs
4833 7319 Crs
4881 7335 Crs
4930 7356 Crs
4979 7380 Crs
5027 7424 Crs
5076 7438 Crs
5124 7469 Crs
5173 7507 Crs
5222 7516 Crs
5270 7521 Crs
5319 7537 Crs
5368 7516 Crs
5416 7520 Crs
5465 7500 Crs
5514 7473 Crs
5562 7471 Crs
5611 7439 Crs
5660 7427 Crs
5708 7430 Crs
5757 7429 Crs
5806 7446 Crs
5854 7468 Crs
5903 7494 Crs
5952 7532 Crs
6000 7565 Crs
6049 7592 Crs
6098 7616 Crs
6146 7645 Crs
6195 7659 Crs
6244 7666 Crs
6292 7664 Crs
6341 7648 Crs
6390 7632 Crs
6438 7579 Crs
6487 7547 Crs
6536 7492 Crs
6584 7435 Crs
6633 7374 Crs
6682 7328 Crs
6730 7266 Crs
6779 7232 Crs
6828 7199 Crs
6876 7164 Crs
6925 7148 Crs
6974 7129 Crs
7022 7122 Crs
7071 7114 Crs
7120 7096 Crs
7168 7102 Crs
7217 7091 Crs
7266 7089 Crs
7314 7095 Crs
7363 7094 Crs
7412 7086 Crs
7460 7095 Crs
7509 7082 Crs
7557 7053 Crs
7606 7026 Crs
7655 6986 Crs
7703 6929 Crs
7752 6862 Crs
7801 6785 Crs
7849 6712 Crs
7898 6629 Crs
7947 6549 Crs
7995 6452 Crs
8044 6363 Crs
8093 6270 Crs
8141 6193 Crs
8190 6099 Crs
8239 6017 Crs
8287 5962 Crs
8336 5887 Crs
8385 5825 Crs
8433 5766 Crs
8482 5726 Crs
8531 5693 Crs
8579 5659 Crs
8628 5627 Crs
8677 5601 Crs
8725 5581 Crs
8774 5562 Crs
8823 5546 Crs
8871 5528 Crs
8920 5522 Crs
8969 5502 Crs
9017 5484 Crs
9066 5461 Crs
9115 5431 Crs
9163 5388 Crs
9212 5338 Crs
9261 5281 Crs
9309 5211 Crs
9358 5134 Crs
9407 5047 Crs
9455 4949 Crs
9504 4841 Crs
9553 4725 Crs
9601 4592 Crs
9650 4433 Crs
9699 4249 Crs
9747 4020 Crs
9796 3733 Crs
9845 3403 Crs
9893 3040 Crs
9942 2675 Crs
9990 2305 Crs
10039 1958 Crs
10088 1676 Crs
10136 1441 Crs
10185 1276 Crs
10234 1163 Crs
10282 1091 Crs
10331 1042 Crs
10380 1011 Crs
10028 7829 Crs
% End plot #1
% Begin plot #2
1.000 UP
0.500 UL
LT1
LCb setrgbcolor
9745 7689 M
[ [(Helvetica) 120.0 0.0 true true 0 (6 nm)]
] -40.0 MRshow
LT1
1475 3097 Crs
1572 2998 Crs
1670 3079 Crs
1767 3094 Crs
1864 3259 Crs
1962 3396 Crs
2059 3647 Crs
2156 3942 Crs
2254 4209 Crs
2351 4515 Crs
2448 4835 Crs
2546 5187 Crs
2643 5503 Crs
2740 5773 Crs
2837 5953 Crs
2935 6125 Crs
3032 6262 Crs
3129 6343 Crs
3227 6415 Crs
3324 6495 Crs
3421 6582 Crs
3519 6635 Crs
3616 6721 Crs
3713 6776 Crs
3811 6853 Crs
3908 6913 Crs
4005 6976 Crs
4103 7026 Crs
4200 7089 Crs
4297 7163 Crs
4395 7220 Crs
4492 7250 Crs
4589 7311 Crs
4687 7306 Crs
4784 7315 Crs
4881 7335 Crs
4979 7380 Crs
5076 7438 Crs
5173 7507 Crs
5270 7521 Crs
5368 7516 Crs
5465 7500 Crs
5562 7471 Crs
5660 7427 Crs
5757 7429 Crs
5854 7468 Crs
5952 7532 Crs
6049 7592 Crs
6146 7645 Crs
6244 7666 Crs
6341 7648 Crs
6438 7579 Crs
6536 7492 Crs
6633 7374 Crs
6730 7266 Crs
6828 7199 Crs
6925 7148 Crs
7022 7122 Crs
7120 7096 Crs
7217 7091 Crs
7314 7095 Crs
7412 7086 Crs
7509 7082 Crs
7606 7026 Crs
7703 6929 Crs
7801 6785 Crs
7898 6629 Crs
7995 6452 Crs
8093 6270 Crs
8190 6099 Crs
8287 5962 Crs
8385 5825 Crs
8482 5726 Crs
8579 5659 Crs
8677 5601 Crs
8774 5562 Crs
8871 5528 Crs
8969 5502 Crs
9066 5461 Crs
9163 5388 Crs
9261 5281 Crs
9358 5134 Crs
9455 4949 Crs
9553 4725 Crs
9650 4433 Crs
9747 4020 Crs
9845 3403 Crs
9942 2675 Crs
10039 1958 Crs
10136 1441 Crs
10234 1163 Crs
10331 1042 Crs
10028 7689 Crs
% End plot #2
% Begin plot #3
1.000 UP
0.500 UL
LT2
LCb setrgbcolor
9745 7549 M
[ [(Helvetica) 120.0 0.0 true true 0 (9 nm)]
] -40.0 MRshow
LT2
1475 3097 Crs
1621 3114 Crs
1767 3094 Crs
1913 3308 Crs
2059 3647 Crs
2205 4096 Crs
2351 4515 Crs
2497 5026 Crs
2643 5503 Crs
2789 5853 Crs
2935 6125 Crs
3081 6301 Crs
3227 6415 Crs
3373 6544 Crs
3519 6635 Crs
3665 6749 Crs
3811 6853 Crs
3957 6968 Crs
4103 7026 Crs
4249 7110 Crs
4395 7220 Crs
4541 7286 Crs
4687 7306 Crs
4833 7319 Crs
4979 7380 Crs
5124 7469 Crs
5270 7521 Crs
5416 7520 Crs
5562 7471 Crs
5708 7430 Crs
5854 7468 Crs
6000 7565 Crs
6146 7645 Crs
6292 7664 Crs
6438 7579 Crs
6584 7435 Crs
6730 7266 Crs
6876 7164 Crs
7022 7122 Crs
7168 7102 Crs
7314 7095 Crs
7460 7095 Crs
7606 7026 Crs
7752 6862 Crs
7898 6629 Crs
8044 6363 Crs
8190 6099 Crs
8336 5887 Crs
8482 5726 Crs
8628 5627 Crs
8774 5562 Crs
8920 5522 Crs
9066 5461 Crs
9212 5338 Crs
9358 5134 Crs
9504 4841 Crs
9650 4433 Crs
9796 3733 Crs
9942 2675 Crs
10088 1676 Crs
10234 1163 Crs
10380 1011 Crs
10028 7549 Crs
% End plot #3
% Begin plot #4
1.000 UP
0.500 UL
LT3
LCb setrgbcolor
9745 7409 M
[ [(Helvetica) 120.0 0.0 true true 0 (12 nm)]
] -40.0 MRshow
LT3
1475 3097 Star
1670 3079 Star
1864 3259 Star
2059 3647 Star
2254 4209 Star
2448 4835 Star
2643 5503 Star
2837 5953 Star
3032 6262 Star
3227 6415 Star
3421 6582 Star
3616 6721 Star
3811 6853 Star
4005 6976 Star
4200 7089 Star
4395 7220 Star
4589 7311 Star
4784 7315 Star
4979 7380 Star
5173 7507 Star
5368 7516 Star
5562 7471 Star
5757 7429 Star
5952 7532 Star
6146 7645 Star
6341 7648 Star
6536 7492 Star
6730 7266 Star
6925 7148 Star
7120 7096 Star
7314 7095 Star
7509 7082 Star
7703 6929 Star
7898 6629 Star
8093 6270 Star
8287 5962 Star
8482 5726 Star
8677 5601 Star
8871 5528 Star
9066 5461 Star
9261 5281 Star
9455 4949 Star
9650 4433 Star
9845 3403 Star
10039 1958 Star
10234 1163 Star
10028 7409 Star
% End plot #4
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
